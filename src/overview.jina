gui' = ..gui

Files' = ..files.Files
Project' = ..project.Projects

;[
left panel

attached devices: udisksctl monitor
http://storaged.org/doc/udisks2-api/latest/gdbus-org.freedesktop.UDisks2.Manager.html#gdbus-method-org-freedesktop-UDisks2-Manager.GetBlockDevices

ask the user if she wants to format the device, if:
, it's not formated
, it's a non'system device whose format is not vfat/exfat
, it's a system device whose format is not btrfs
http://storaged.org/doc/udisks2-api/latest/gdbus-org.freedesktop.UDisks2.Block.html#gdbus-property-org-freedesktop-UDisks2-Block.HintSystem
http://storaged.org/doc/udisks2-api/latest/index.html
https://crates.io/crates/dbus

use udisks to format non'system devices with vfat or exfat (if wants files bigger than 4GB)
http://storaged.org/doc/udisks2-api/latest/gdbus-org.freedesktop.UDisks2.Block.html#gdbus-method-org-freedesktop-UDisks2-Block.Format
type: fat
mkfs-args: -F, 32, -I (to override partitions)
for system devices:
; sudo sh -c "mkfs.btrfs -f <dev-path>; mount <dev-path> /mnt; chmod 777 /mnt; umount /mnt"

projects on VFAT/exFAT formated devices will be opened as read'only
when you try to edit them, you will be asked to copy them on to a BTRFS formated device

mount it (if it's not) using udisks
]

ProjectsList :gui.Widget = .{
	project'dir
	
	new = { projects'dir'path |
		project'dir = Files.new project'dir'path
		; read the containg files async
		Self. project'dir
	}
	
	move'up = {}
	
	move'down = {}
	
	activate'project = {}
}

Overview :gui.Widget = {
	container
	selected'project'dir
	
	new = { projects |
	}
	
	activate'project = { project'dir |
		; if project_uri is in project_views, bring it up
		; otherwise create a new Project
	}
	
	on'project'activated = { callback |
		; hide overview when a project is activated;
		
		callback(self.selected'project'dir)
	}
}
