#_preseed_V1

# https://gist.github.com/zuzzas/a1695344162ac7fa124e15855ce0768f
# https://www.dns.cam.ac.uk/news/2017-12-12-debian-preseed.html
# https://www.librebyte.net/en/systems-deployment/unattended-debian-installation/
# https://wiki.debian.org/DebianInstaller/Preseed/EditIso
# https://github.com/delfer/debian-preseed-iso/blob/master/build.sh
# https://zauner.nllk.net/post/0033-debian-preseed/
# https://finalrewind.org/interblag/entry/debian-preseeding-usb-stick-with-uefi/

# https://www.debian.org/releases/stable/example-preseed.txt
# https://gist.github.com/nmaupu/1040657ac7728adff0356ec3139a22f9

# to preseed variables used in the installed system,
#   the name of the package that contains the corresponding debconf template should be used
# only variables that have their owner set to something other than “d-i”,
#   will be propagated to the debconf database for the installed system

### localization

d-i debian-installer/locale string en_US
# preseeding only locale sets language, country and locale
# the values can also be preseeded individually for greater flexibility
#d-i debian-installer/language string en
#d-i debian-installer/country string NL
#d-i debian-installer/locale string en_GB.UTF-8
# optionally specify additional locales to be generated
#d-i localechooser/supported-locales multiselect en_US.UTF-8, nl_NL.UTF-8

# keyboard selection
d-i keyboard-configuration/xkb-keymap select us
# d-i keyboard-configuration/toggle select No toggling

### network configuration

# netcfg will choose an interface that has link if possible
# this makes it skip displaying a list, if there is more than one interface
d-i netcfg/choose_interface select auto

# any hostname and domain names assigned from dhcp take precedence over values set here
# however, setting the values still prevents the questions from being shown, even if values come from dhcp
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# disable that annoying WEP key dialog
d-i netcfg/wireless_wep string

# if non-free firmware is needed for the network or other hardware, try to load it, without prompting
d-i hw-detect/load_firmware boolean true

### mirror settings

# if you select ftp, the mirror/country string does not need to be set
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

d-i mirror/suite string sid

# don't ask for user's full name
d-i passwd/user-fullname string

### clock and time zone setup

# controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
# controls whether or not the hardware clock is set to UTC
d-i clock-setup/utc boolean true

d-i time/zone string UTC

### partitioning

## partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/sda
# and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
#d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string regular

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

## Partitioning for EFI
# If your system needs an EFI partition you could add something like
# this to the recipe above, as the first element in the recipe:
#               538 538 1075 free                              \
#                      $iflabel{ gpt }                         \
#                      $reusemethod{ }                         \
#                      method{ efi }                           \
#                      format{ }                               \
#               .                                              \
#
# The fragment above is for the amd64 architecture; the details may be
# different on other architectures. The 'partman-auto' package in the
# D-I source repository may have an example you can follow.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
#d-i partman-efi/non_efi_system boolean true
# Ensure the partition table is GPT - this is required for EFI
#d-i partman-partitioning/choose_label string gpt
#d-i partman-partitioning/default_label string gpt

# When disk encryption is enabled, skip wiping the partitions beforehand.
#d-i partman-auto-crypto/erase_disks boolean false

## Partitioning using RAID
# The method should be set to "raid".
#d-i partman-auto/method string raid
# Specify the disks to be partitioned. They will all get the same layout,
# so this will only work if the disks are the same size.
#d-i partman-auto/disk string /dev/sda /dev/sdb

# Next you need to specify the physical partitions that will be used.
#d-i partman-auto/expert_recipe string \
#      multiraid ::                                         \
#              1000 5000 4000 raid                          \
#                      $primary{ } method{ raid }           \
#              .                                            \
#              64 512 300% raid                             \
#                      method{ raid }                       \
#              .                                            \
#              500 10000 1000000000 raid                    \
#                      method{ raid }                       \
#              .

# Last you need to specify how the previously defined partitions will be
# used in the RAID setup. Remember to use the correct partition numbers
# for logical partitions. RAID levels 0, 1, 5, 6 and 10 are supported;
# devices are separated using "#".
# Parameters are:
# <raidtype> <devcount> <sparecount> <fstype> <mountpoint> \
#          <devices> <sparedevices>

#d-i partman-auto-raid/recipe string \
#    1 2 0 ext3 /                    \
#          /dev/sda1#/dev/sdb1       \
#    .                               \
#    1 2 0 swap -                    \
#          /dev/sda5#/dev/sdb5       \
#    .                               \
#    0 2 0 ext3 /home                \
#          /dev/sda6#/dev/sdb6       \
#    .

# For additional information see the file partman-auto-raid-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository.

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
#d-i partman/mount_style select uuid

### Apt setup

# you can choose to install non-free and contrib software
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
# uncomment this if you don't want to use a network mirror
#d-i apt-setup/use_mirror boolean false

# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server
# URL to the public key of the local repository
# you must provide a key or apt will complain about the unauthenticated repository,
#   and so the sources.list line will be left commented out
#d-i apt-setup/local0/key string http://local.server/key
# if the provided key file ends in ".asc" the key file needs to be an ASCII-armoured PGP key,
#   if it ends in ".gpg" it needs to use the "GPG key public keyring" format,
#   the "keybox database" format is currently not supported.

### package selection
tasksel tasksel/first multiselect
# some versions of the installer can report back on what software you have installed
# sending reports helps the project determine what software is most popular,
#   and should be included on the first CD/DVD
popularity-contest popularity-contest/participate boolean false

### boot loader installation

#d-i grub-installer/skip boolean true

# this is fairly safe to set, it makes grub install automatically to the UEFI partition/boot record,
#   if no other operating system is detected on the machine
d-i grub-installer/only_debian boolean true
# this one makes grub-installer install to the UEFI partition/boot record,
#   if it also finds some other OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# use the following option to add additional boot parameters for the installed system
#   (if supported by the bootloader installer)
# note: options passed to the installer will be added automatically
#d-i debian-installer/add-kernel-opts string nousb

### finishing up the installation
# avoid that last message about the install being complete
d-i finish-install/reboot_in_progress note
# this is how to make the installer shutdown when finished, but not reboot into the installed system
#d-i debian-installer/exit/halt boolean true
# this will power off the machine instead of just halting it
#d-i debian-installer/exit/poweroff boolean true

### running custom commands during the installation
# this first command is run as early as possible, just after preseeding is read
#d-i preseed/early_command string anna-install some-udeb
# this command is run immediately before the partitioner starts
# it may be useful to apply dynamic partitioner preseeding that depends on the state of the disks
#   (which may not be visible when preseed/early_command runs)
#d-i partman/early_command string \
#  debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# this command is run just before the install finishes, but when there is still a usable /target directory
# you can chroot to /target and use it directly, or use the apt-install and in-target commands to
#   easily install packages and run commands in the target system
d-i preseed/late_command string mount --bind /hd-media /target/mnt; in-target sh /mnt/comshell/preseed.sh
