default_border none
default_floating_border pixel 1
hide_edge_borders --i3 smart
workspace_layout tabbed
font sans 10.5
#                       border  backgr. text
client.focused          #222222 #4285F4 #ffffff
client.focused_inactive #222222 #555555 #ffffff
client.unfocused        #222222 #555555 #ffffff
client.urgent           #222222 #555555 #ffffff

focus_follows_mouse no

exec 'swayidle -w \
	timeout 595 "swaymsg \"[title=*] opacity 0.5\"" \
		resume "swaymsg \"[title=*] opacity 1\"" \
	timeout 597 "swaymsg \"[title=*] opacity 0.2\"" \
	timeout 600 "swaylock --daemonize --color 000000; swaymsg \"output * dpms off\"" \
		resume "swaymsg \"output * dpms on\"" \
	before-sleep "swaylock --daemonize --color 000000" \
	lock "swaymsg \"mode lock\"" \
	unlock "swaymsg \"mode default\""; \
	swaymsg exit'
# closing swayidle leads to closing sway too
# this is to make sure pressing F8 will always takes the user to login screen
# so a malicious program can't steal user password

# press "alt+enter" ("pun+enter" in action mode) to open app launcher menu
# in app launcher menu press "alt+enter" again to open session management menu:	lock, suspend, exit, reboot, poweroff
# press and release "alt" ("pun" in action mode) to switch between the primary app (usually Comshell) and the prior app
# press "alt+space" ("pun+space" in action mode) to switch between windows of a workspace
# press "alt+backspace" ("pun+backspace" in action mode) to close focused window

# fuzzel
# apps:
# exec sh -c 'swaymsg workspace $$app && swaymsg \'[con_id=__focused__] focus\' || swaymsg exec $$app'
# session (lock exit suspend reboot poweroff)
exec sh -c 'case $$answer in \
	lock) loginctl lock-session ;; \
	suspend) systemctl suspend ;; \
	exit) swaymsg exit ;; \
	reboot) reboot ;; \
	poweroff) poweroff ;; \
	esac'

bindsym Mod1+Tab workspace 1
workspace_auto_back_and_forth yes

bindsym Mod1+a [workspace=__focused__ floating] kill; focus next
focus_wrapping workspace

bindsym Mod1+Escape kill

exec foot --server -c /usr/local/share/foot.cfg
bindsym Mod1+Return [workspace=__focused__ app_id=foot] focus; exec footclient

bindsym Mod1+s grim -o "$$HOME/.cache/screen.png" | wl-copy --type text/uri-list "file://$$HOME/.cache/screen.png"
# screen recording must be done using gstreamer1.0-pipewire (like in Kooha, and GnomeShell)
# at the moment, there is no program which does that
# https://wiki.archlinux.org/title/Screen_capture
# the taken screenshot or screencast is saved into "~/.cache/screen"
# a red circle must be shown on the status bar, during screen recording
# suppose that "screencap" is a Glib based application which implements unique instance
# so we can use the same keybinding to start and stop recording
# bindsym Mod1+r exec screencap

bar {
	bindsym button1 $apps
	bindsym button2 $session
	workspace_buttons no
	position bottom
	height 16
	colors {
		background #222222
		statusline #ffffff
	}
	font pango:sans, Material Design Icons 10.5
	separator_symbol "  "
	status_command i3pystatus -c /usr/local/share/sway-status.py
}

# https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# change default font size of GTK apps from 10 to 10.5
exec_always {
	gsettings set org.gnome.desktop.interface font-name 'sans 10.5'
	gsettings set org.gnome.desktop.interface document-font-name 'sans 10.5'
	gsettings set org.gnome.desktop.interface monospace-font-name 'monospace 10.5'
}

workspace 1:codev
exec sh -c "codev || python3 /usr/local/share/codev/ || swaymsg \"$apps\""
