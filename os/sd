#!pkexec /bin/sh
set -e

format() {
	mkfs."$2" "/dev/$1"
	mount "$1" /mnt
	chmod 777 /mnt
	umount /mnt
}

create_partitions() {
	local dev_path="/dev/$1"
	local start=1M line=
	shift
	(
		for line in "$@"; do
			case "$line" in
			0M*) ;;
			*) echo "$start,$line"; start= ;;
			esac
		done
	) | sfdisk --quiet --wipe always --label gpt "$dev_path"
}

sd_mount() {
	local first_user="$(id -un 1000)"
	local dev_path="/dev/$1"
	local mount_path="/home/$first_user/.local/mount/$1"
	su -c "mkdir -p \"$mount_path\"" "$first_user"
	# for filesystems like vfat and exfat
	mount -o nosuid,nodev,noexec,nofail,uid="$(id -u "$first_user")",gid="$(id -g "$first_user")" \
		"$dev_path" "$mount_path" &>/dev/null ||
	# for linux filesystems
	mount -o nosuid,nodev,noexec,nofail "$dev_name" "$mount_path"
}

sd_unmount() {
	local first_user="$(id -un 1000)"
	local mount_path="/home/$first_user/.local/mount/$1"
	umount "$mount_path"
	rmdir --ignore-fail-on-non-empty "$mount_path"
}

device_name="$(basename "$2")"

[ -f "/dev/$device_name" ] || exit 1

# if the parent of "$2" is the device that the system is installed on, exit
parent_device="$(readlink -f "/sys/class/block/$device_name/..")"
parent_device="$(basename "$parent_device")"
[ "$parent_device" = block ] && parent_device="$device_name"
root_device="$(rdev)"
root_device="$(basename "$root_device")"
[ -z "$root_device" ] && exit 1
[ "$root_device" = "$parent_device" ] && exit 1

case "$1" in
	format) format "$device_name" "$3" ;;
	part) shift; shift; create_partitions "$device_name" "$@" ;;
	flash) dd if="$3" of="/dev/$device_name" ;;
	mount) sd_mount "$device_name" ;;
	unmount) sd_unmount "$devicename" ;;
	*) echo "storage device management"
		echo "usage:"
		echo "	sd format DEVICE_NAME FORMAT_TYPE"
		echo "		FORMAT_TYPE: btrfs, vfat, exfat, ..."
		echo "	sd part DEVICE_NAME SIZE1,TYPE1 [SIZE2,TYPE2 ...]"
		echo "		TYPE: linux, swap, uefi"
		echo "	sd flash DEVICE_NAME IMAGE_PATH"
		echo "	sd mount DEVICE_NAME"
		echo "	sd unmount DEVICE_NAME" ;;
esac
