using Alpine Linux Linux we can easily setup a Linux based operating system
anything which needs a kernel based operating system can use Alpine:
, it supports a wide range of processor architectures
, it's suitable for systems with limited resources
, the stable releases provide a security proven system for servers

current problems of Alpine:
, Musl's allocator must be replaced with "mimalloc"
  https://www.linkedin.com/pulse/testing-alternative-c-memory-allocators-pt-2-musl-mystery-gomes/
  https://github.com/emerzon/alpine-mimalloc/blob/master/Dockerfile
  https://microsoft.github.io/mimalloc/overrides.html
, OpenRC must be replaced with "s6"
  "https://skarnet.com/projects/service-manager.html"
  "https://skarnet.org/software/s6-rc/why.html"
  "https://skarnet.org/software/s6/why.html"
  "https://skarnet.org/software/s6/"
  "https://github.com/smaeul/rc"
  "https://wiki.gentoo.org/wiki/S6_and_s6-rc-based_init_system"
  "https://framagit.org/architekt/66tools-overlay"
  "https://github.com/just-containers/s6-overlay"
  "https://github.com/oznu/docker-s6-alpine"
  "https://wiki.artixlinux.org/Main/Migration"
  "https://www.exherbo.org/docs/without-systemd.html"
  "https://github.com/kisslinux/init"
  "https://github.com/jhuntwork/merelinux"
  "https://github.com/Aalbus-linux/Aalbus"
  "https://gitea.com/CasperVector/slew"
, in "busybox-initscripts" use "mdevd" instead of "mdev"
  "https://skarnet.org/software/mdevd/"
, all of these must be fixed in "mkinitfs" too
  "https://pkgs.alpinelinux.org/package/edge/main/x86_64/mkinitfs"
  "https://github.com/illiliti/tinyramfs"

to install Alpine, boot to a live Alpine system (using a disk image or netboot), then:
; curl https://damoonsaghian/Comshell/archive/master.tar.gz | tar -xz
; cd Comshell/alpine
ensure that the files aren't malicious

find the device you want to install Alpine Linux on:
; fdisk -l
prepare the disk (note that the content of the disk will be deleted):
; instalp format sdx
now install Alpine Linux on it:
; instalp sdx
if the installation gets interrupted, just run the last command again (no need to reformat the disk)

after rebooting to the installed system, it will ask for the root password and a user account
logout of root, and login as the user you provided

".data/sway.png"

to install packages: "alp add package-names"
to remove packages: "alp del package-names"
"alp" uses "apk" and BTRFS snapshots to manage packages in such a way that
  changes on the file'system would be atomic, and does not interfere with the running system
as a result when you install an application, or update the system using "alp",
  the system must be restarted for it to take effect
removing packages is done live though (otherwise managing "/etc" would be complicated)
all of this means that we can have reliable automatic updates

you can set "user1" for automatic login (run as root):
; echo 'agetty_options="--autologin <username> --noclear"' > /etc/conf.d/agetty.autologin
but to protect the computer from physical attacks, you have to disable automatic login,
  and lock the session when you leave the computer
in addition you have to:
, somehow prevent tampering with hardware
, protect boot firmware by a password
, disable changing the boot device
these can make physical attacks more difficult, but keep in mind that
  physical access to a computer is root access, given enough time and resources
