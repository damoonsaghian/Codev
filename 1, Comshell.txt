= command based user interface
command based user interfaces (using keyboard, voice, gesture) are faster, more convenient and more powerful,
  than pointer based user interfaces (using mouse, touch, pen)
pointer based interface seems appealing at first sight, because of its discoverability
but with simple uniform GUI (ie the oposite of what we see in websites),
  there is no need for a pointer based user interface

touch interface has an additional problem: interaction at a distance is not possible
but it can still be useful in simple or special applications

detection of voice commands is a relatively simple process (compared to general speech recognition),
  because we only need to match against a relatively small set of commands
a headset with near range microphone can be used, to exclude far away sound sources
also it is better to put battery and transmitter of the headset in a separate unit which can be put in a pocket
  this makes the headset lighter and safer

for those who neither can use all their fingers, nor can talk, gesture based (2d) input can be implemented

".data/keyboard.png"
, comma followed by a letter -> the symbol on its bottom right corner
, ";" followed by "psi" followed by space or comma -> "Ïˆ" followed by one space or nothing
, two apostrophes then an alphabetical letter -> capital letter
, "aBcd" then two apostrophes followed by one space -> "AbCD" followed by one space
"https://github.com/abstracthat/dactyl-manuform"
"https://zealot.hu/absolem/"
"https://github.com/foostan/crkbd"
"https://github.com/nglgzz/42"
"https://github.com/adereth/dactyl-keyboard"
Kinesis Advantage 2 keyboard
"http://www.allthingsergo.com/the-best-ergonomic-mechanical-keyboards/"

for compatibility with other applications, we may still need a mouse,
  plus these extra keys which can be put in the middle of the keyboard:
, arrow keys, "page up", "page down", "home", "end", "tab"
, "alt", "ctrl", "shift"
and a row of punctuations on top
also we can have another row for function keys, plus the "delete" key

= Comshell
Comshell is a unified computing environment, utilizing command based user interface

".data/comshell.png"

project directories reside in directories named "projects" or "projects.*",
  inside home directory or mounted disks
list of all projects will appear in a floating layer, at the center of screen
each group of projects (which are in the same directory) will be shown in separate tabs

in a project view, the list of files of a project will be displayed in the left side'bar
opened files are slightly highlighted
files and directories with names starting with a dot, will be hidden
".cache" directory inside a project is for files we don't want to share or backup

text files will be opened in a text editor
directories with ".g" suffixes, will be opened in a gallery view
files and directories inside a gallery, will be opened in a floating layer

non'local projects, web pages, PDF documents, etc, accessed from links inside the main project,
  will be opened in a floating layer
web pages: move caret between visual elements (ignoring structural elements)

modal key'bindings
modes (normal mode and insert mode) must be visually distinctive
press "esc" or "tab" to go to normal mode
in normal mode we can:
, press "enter" to go to insert mode
, next/previous word, line, paragraph, section (righ/left middle row keys)
, start and end selection, then copy or cut
, paste
, undo

, navigation: move, search
, selection
, completion

double space:
, at the beginning of line: indent
, otherwise: complete (auto'completion does not disappear with only one space)
