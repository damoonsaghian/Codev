with Debian we can easily setup a Linux based operating system
anything which needs a kernel'based operating system can use Debian:
, it supports a wide range of processor architectures
, it's suitable for systems with limited resources
, the stable release provides a highly tested system for sensitive use cases

the following instructions show how to prepare an installation media, in a Unix'like operating system
if you don't have access to an installed Unix'like operating system,
  you can use Debian (or any other Linux distro) live image
first make sure that these packages are installed: wget2/wget libarchive-tools xorriso udisks2
download the files of this project:
; wget2 -r -np -nH --cut-dirs=1 https://hashbang.sh/~damoonsaghian/Comshell/
ensure that the downloaded files aren't malicious
insert a USB storage device (at least 700MB), find the device using "lsblk"
now assuming the device is "sdx", and the CPU architecture is "amd64":
; sh Comshell/mkdi/mkdi.sh amd64 sdx

now just boot to the USB storage
it will ask for:
, a root password, and a user account
, confirmation for auto'detected time'zone
, the network configuration (if it's not a simple DHCP wired connection)
, the target device (if there is more than one device), and then installs Debian on it
after reboot, you can login to the installed system

press "tab+enter" to open the application launcher
the first character in application launcher:
, space: command mode
, enter: switch between the first application (usually Comshell) and the prior application
, backspace: close current application

self'explanatory commands: poweroff, reboot, logout, sleep, lock

to switch between users, disconnected and reconnect your keyboard,
  or enter "su" command in application launcher,
  or when in lock screen, press the "tab" key

to enable/disable automatic login for current user:
; autologin
but to protect the computer from physical attacks, you have to disable automatic login,
  and lock the session when you leave the computer
in addition you must:
, somehow prevent tampering with hardware
, protect boot firmware by a password
, disable changing the storage device used for booting
these can make physical attacks more difficult, but keep this in mind:
  physical access to a computer is root access, given enough time and resources

to configure a wifi connection:
; net wifi
to setup a wifi access'point:
; net ap
to setup a router:
; net router
to configure a cellular connection:
; net cell

to connect a Bluetooth device:
; bt
to block/unblock radio devices:
; rd

to install packages:
; apm install package-names
to remove packages:
; apm remove package-names
"apm" (atomic package manager) uses "apt" and BTRFS snapshots to manage packages in such a way that
  changes on the file'system would be atomic
this means that we can have reliable automatic updates
